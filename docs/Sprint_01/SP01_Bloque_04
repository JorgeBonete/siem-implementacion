### INSTALACI√ìN DE PRIMER COMPONENTE EN LA ARQUITECTURA WAZUH INDEXER üîÑ

Wazuh Indexer es el motor de almacenamiento y b√∫squeda de datos.

    - Es una distribuci√≥n personalizada de OpenSearch que Wazuh adapta para integrarse con su ecosistema para el SIEM basado en Wazuh.
    - Su funci√≥n es recibir, indexar y almacenar todos los eventos y alertas que el Wazuh Manager y otras fuentes (como Suricata) env√≠an.
    - Permite buscar y analizar esos datos desde el Wazuh Dashboard mediante consultas.
    - Trabaja en cl√∫ster (puede ser uno o varios nodos), usando TLS/mTLS para comunicaci√≥n segura entre nodos y con el Manager.
    - La versi√≥n del motor que manejamos para este proyecto es OpenSearch 2.19.1, incluida dentro del paquete wazuh-indexer 4.12.

# INSTALACI√ìN DE PAQUETERIA WAZUH INDEXER
            1. Actualizar paquetes y dependencias (como root)
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    sudo dnf clean all
                    sudo dnf update -y
                    sudo dnf install -y curl gnupg policycoreutils-python-utils

            2. Repositorio (como root)
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    cat <<EOF | sudo tee /etc/yum.repos.d/wazuh.repo
                    [wazuh]
                    name=Wazuh repository
                    baseurl=https://packages.wazuh.com/4.x/yum/
                    gpgcheck=1
                    gpgkey=https://packages.wazuh.com/key/GPG-KEY-WAZUH
                    enabled=1
                    priority=1
                    EOF
            
            3. Instalar Wazuh Indexer (versi√≥n 4.12 con OpenSearch 2.19.1)
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    sudo dnf install -y wazuh-indexerOpenSearch 2.19.1

            4. Verificar versi√≥n instalada        
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    sudo rpm -qi wazuh-indexer | egrep 'Name|Version|Release|Install Date'
                        üìÑ  Name        : wazuh-indexer
                            Version     : 4.12.0
                            Release     : 1
                            Install Date: lun 07 jul 2025 23:22:42
                    sudo echo "OpenSearch $(/usr/share/wazuh-indexer/bin/opensearch --version 2>/dev/null | grep -oP '(?<=Version: )[^,]+')"
                        üìÑ  OpenSearch 2.19.1

            5. Verificar grupos y usuarios
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    sudo id wazuh-indexer || sudo useradd --system --no-create-home --shell /sbin/nologin wazuh-indexer
                        üìÑ uid=982(wazuh-indexer) gid=982(wazuh-indexer) grupos=982(wazuh-indexer)

            6. Estructura de directorios
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    sudo mkdir -p /etc/wazuh-indexer/certs
                    sudo mkdir -p /var/lib/wazuh-indexer
                    sudo mkdir -p /var/log/wazuh-indexer
                    sudo chown -R wazuh-indexer:wazuh-indexer /var/lib/wazuh-indexer /var/log/wazuh-indexer /etc/wazuh-indexer

            7. Permisos
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    # Asignar propietario y grupo "wazuh-indexer" a todo el directorio y sus archivos
                        sudo chown -R wazuh-indexer:wazuh-indexer /etc/wazuh-indexer/certs                    
                    # El archivo root-ca.srl debe quedar como propietario root
                        sudo chown root:root /etc/wazuh-indexer/certs/root-ca.srl
                    # Solo acceso para leer/ejecutar al propietario (wazuh-indexer)
                        sudo chmod 500 /etc/wazuh-indexer/certs
                    # admin-key.pem y indexer-key.pem ‚Üí solo propietario puede leer
                        sudo chmod 400 /etc/wazuh-indexer/certs/admin-key.pem
                        sudo chmod 640 /etc/wazuh-indexer/certs/indexer-key.pem
                    # admin.pem e indexer.pem ‚Üí lectura para propietario y grupo
                        sudo chmod 640 /etc/wazuh-indexer/certs/admin.pem
                        sudo chmod 640 /etc/wazuh-indexer/certs/indexer.pem
                    # root-ca.pem ‚Üí lectura para todos
                        sudo chmod 644 /etc/wazuh-indexer/certs/root-ca.pem
                    # Permisos del archivo interno de CA                    
                        sudo chmod 644 /etc/wazuh-indexer/certs/root-ca.srl

# CONFIGURACION TLS mTLS 

            1.Configurar archivo opensearch.yml
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                    # Direcci√≥n IP donde el nodo escucha conexiones, escucha tanto la API HTTP como el transporte interno.               
                    network.host: 10.10.7.6 ‚Äî IP en la que este nodo 
                    # Nombre √∫nico del nodo en el cl√∫ster (puede ser FQDN)
                    node.name: nodo-datoswz.dominio.com.ec
                    # Lista de nodos principales.
                    cluster.initial_master_nodes:
                    - "nodo-datoswz.dominio.com.ec" 
                    # Nombre del cl√∫ster (debe coincidir en todos los nodos)
                    cluster.name: "wazuh-cluster"
                    # M√°x. de nodos que pueden compartir la misma carpeta de datos (normalmente ‚Äú1‚Äù; ‚Äú3‚Äù 
                    node.max_local_storage_nodes: "1"
                    # Carpeta donde se almacenan los √≠ndices y datos del nodo ‚Äî Comentario de la ruta de datos.
                    path.data: /mnt/data/wazuh-indexer

                    f

                    path.logs: /var/log/wazuh-indexer ‚Äî Ruta donde el nodo escribe sus archivos de log.

                    path.repo: ["/mnt/data/opensearch-snapshots"] ‚Äî Lista de rutas autorizadas para repositorios de snapshots.

                    # Carpeta donde se guardan los logs del nodo ‚Äî Comentario (nota: aplica a path.logs; ya definido arriba).

                    # ‚îÄ‚îÄ TLS/mTLS para la API HTTP (peticiones REST) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador y t√≠tulo de la secci√≥n de seguridad HTTP.

                    plugins.security.ssl.http.enabled: true ‚Äî Habilita HTTPS en la API de OpenSearch (cifra tr√°fico REST).

                    # Activa HTTPS en la API (obligatorio para cifrar REST) ‚Äî Comentario del prop√≥sito de HTTPS.

                    plugins.security.ssl.http.pemcert_filepath: certs/indexer.pem ‚Äî Ruta al certificado p√∫blico que presenta el servidor HTTP.

                    # Certificado p√∫blico del nodo para HTTPS ‚Äî Comentario de referencia del certificado.

                    plugins.security.ssl.http.pemkey_filepath: certs/indexer-key.pem ‚Äî Ruta a la clave privada que corresponde al certificado HTTPS.

                    # Llave privada del nodo para HTTPS ‚Äî Comentario sobre la clave.

                    plugins.security.ssl.http.pemtrustedcas_filepath: certs/root-ca.pem ‚Äî CA utilizada para validar certificados de clientes/servidor en HTTPS.

                    # CA que firma los clientes/servidor (confianza) ‚Äî Comentario de la CA confiable.

                    # ‚îÄ‚îÄ TLS/MTLS para transporte interno (entre nodos/roles internos) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador y t√≠tulo de seguridad del canal de transporte.

                    plugins.security.ssl.transport.enabled: true ‚Äî Activa TLS para el canal de transporte entre nodos del cl√∫ster.

                    # Activa TLS en el canal de transporte (gossip/cluster) ‚Äî Comentario del objetivo del TLS de transporte.

                    plugins.security.ssl.transport.pemcert_filepath: certs/indexer.pem ‚Äî Certificado del nodo usado en el canal de transporte.

                    # Cert del nodo para transporte ‚Äî Comentario del cert de transporte.

                    plugins.security.ssl.transport.pemkey_filepath: certs/indexer-key.pem ‚Äî Clave privada del nodo para el canal de transporte.

                    # Llave del nodo para transporte ‚Äî Comentario de la clave.

                    plugins.security.ssl.transport.pemtrustedcas_filepath: certs/root-ca.pem ‚Äî CA que se usa para confiar y validar peers en el transporte.

                    # CA confiable para transporte ‚Äî Comentario de la CA.

                    plugins.security.ssl.transport.enforce_hostname_verification: true ‚Äî Obliga a que el CN/SAN del cert coincida con el hostname del peer.

                    # Verificaci√≥n de hostname en CN/SAN (CNs personalizados) ‚Äî Comentario explicativo.

                    plugins.security.ssl.transport.resolve_hostname: true ‚Äî Resuelve FQDN a IP para comparar hostnames/DNs correctamente.

                    # Resuelve FQDN a IP para comparar DN/hostnames ‚Äî Comentario de ayuda.

                    # ‚îÄ‚îÄ Autenticaci√≥n mutua en HTTP ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador para la secci√≥n de mTLS en HTTP.

                    plugins.security.ssl.http.clientauth_mode: REQUIRE ‚Äî Exige certificado de cliente para acceder a la API (mTLS obligatorio).

                    # Requiere certificado de cliente (mTLS) para acceder a la API ‚Äî Comentario que reafirma el requerimiento.

                    # ‚îÄ‚îÄ DN con privilegios de administraci√≥n del cl√∫ster ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador para DNs administradores.

                    plugins.security.authcz.admin_dn: ‚Äî Lista de DNs cuyos certificados cliente tienen privilegios de admin.

                    - "CN=admin.coopsi.fin.ec,OU=TECNOLOGIA,O=COOPSI,L=Cuenca,ST=Azuay,C=EC" ‚Äî DN del certificado cliente admin con acceso total.

                    - "CN=wazuh-dashboard.coopsi.fin.ec,OU=TECNOLOGIA,O=COOPSI,L=Cuenca,ST=Azuay,C=EC" ‚Äî DN del dashboard autorizado para tareas administrativas.

                    # Admin (cliente) con acceso total para ejecuci√≥n de tareas administrativas ‚Äî Comentario contextual para los admin DN.

                    # Dashboard autorizado como admin ‚Äî Comentario del DN del dashboard.

                    # ‚îÄ‚îÄ DNs de nodos confiables para el canal de transporte ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador de DNs de confianza para transporte.

                    plugins.security.nodes_dn: ‚Äî Lista de DNs de certificados de nodos permitidos en el cl√∫ster (transporte).

                    - "C=EC, ST=Azuay, L=Cuenca, O=COOPSI, OU=TECNOLOGIA, CN=srvwazuh.coopsi.fin.ec" ‚Äî DN del certificado del nodo aceptado como peer v√°lido.

                    # Los DN de nodos OpenSearch del cl√∫ster ‚Äî Comentario resumen.

                    # ‚îÄ‚îÄ Compatibilidad en cabecera de versi√≥n (respuesta /) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador para opci√≥n de compatibilidad de versi√≥n.

                    compatibility.override_main_response_version: false ‚Äî Devuelve la versi√≥n nativa de OpenSearch sin sobreescribirla para compatibilidad.

                    # Mantiene el n√∫mero de versi√≥n nativo de OpenSearch en la respuesta ‚Äî Comentario aclaratorio.

                    # ‚îÄ‚îÄ Indices de sistema permitidos por OpenSearch Security ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador sobre √≠ndices de sistema.

                    plugins.security.system_indices.enabled: true ‚Äî Permite que el plugin de seguridad gestione y proteja √≠ndices de sistema.

                    # ‚îÄ‚îÄ Permitir modificar configuraci√≥n de seguridad por REST (con cuidado) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Äî Separador para habilitar cambios v√≠a REST.

                    plugins.security.unsupported.restapi.allow_securityconfig_modification: true ‚Äî Autoriza cambios de la configuraci√≥n de seguridad v√≠a API (solo con credenciales/MTLS admin).

                    # Permite cambiar config del plugin de seguridad v√≠a API (solo admin mTLS) ‚Äî Advertencia/comentario asociado.

                    # Snapshot repository ‚Äî Comentario que introduce la secci√≥n de repositorios de snapshots (ya habilitados en path.repo).

~ ‚Äî Car√°cter sobrante sin efecto de configuraci√≥n (probable residuo del editor).
               

            2.Configurar archivo config.yml
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                # sudo vi /usr/share/wazuh-indexer/plugins/opensearch-security/securityconfig/config.yml
                    authc:
                    clientcert_auth_domain:
                        description: "Authenticate via SSL client certificates"
                        http_enabled: true
                        transport_enabled: false
                        order: 0
                        http_authenticator:
                        type: clientcert
                        challenge: false
                        config:
                            username_attribute: dn   # Aqu√≠ se usa DN, porque esto es completo
                        authentication_backend:
                        type: noop

                    basic_internal_auth_domain:
                        description: "Authenticate via HTTP Basic against internal users database"
                        http_enabled: true
                        transport_enabled: true
                        order: 1
                        http_authenticator:
                        type: basic
                        challenge: true
                        authentication_backend:
                        type: internal     # Usamos internal no intern

            3.Configurar archivo roles_mapping.yml (Borramos los )
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                # sudo vi /usr/share/wazuh-indexer/plugins/opensearch-security/securityconfig/roles_mapping.yml
                        _meta:
                        type: "rolesmapping"
                        config_version: 2

                        # Admin total (por backend role super_admin)
                        super_admin:
                        reserved: false
                        hidden: false
                        backend_roles:
                            - "super_admin"
                        users: []
                        hosts: []
                        and_backend_roles: []
                        description: "admin-coopsi con rol super_admin (v√≠a backend_roles)"

                        # Servicio del Dashboard (usuario interno kibanaserver)
                        kibana_user:
                        reserved: false
                        hidden: false
                        backend_roles: []
                        users:
                            - "kibanaserver"
                        hosts: []
                        and_backend_roles: []

                        # Permite al Dashboard leer √≠ndices wazuh-*
                        manage_wazuh_index:
                        reserved: false
                        hidden: false
                        backend_roles: []
                        users:
                            - "kibanaserver"
                        hosts: []
                        and_backend_roles: []

                        # Wazuh Manager por mTLS (usa DN completo del cert del Manager)
                        wazuh_manager:
                        reserved: false
                        hidden: false
                        backend_roles: []
                        users:
                            - "C=EC, ST=Azuay, L=Cuenca, O=COOPSI, OU=TECNOLOGIA, CN=coordinadorwz.coopsi.fin.ec"
                        hosts: []
                        and_backend_roles: []

            4.Configurar archivo roles_mapping.yml
                üñ•Ô∏è VM2 (Rol: Wazuh Indexer & Dashboard)
                # sudo vi /usr/share/wazuh-indexer/plugins/opensearch-security/securityconfig/roles_mapping.yml





# root-ca.pem ‚Üí lectura para todos
chmod 644 /etc/wazuh-indexer/certs/root-ca.pem

# El archivo root-ca.srl debe quedar como propietario root
chown root:root /etc/wazuh-indexer/certs/root-ca.srl

                    


‚ú®----------------------------------------------------------------------------------------------------------------------------------‚ú®





